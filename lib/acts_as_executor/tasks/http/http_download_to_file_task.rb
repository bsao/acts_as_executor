module ActsAsExecutor  module Tasks    module Http      # HTTP task      class HttpDownloadToFileTask < ActsAsExecutor::Tasks::Http::AbstractHttpTask        BUFFER_SIZE = 4096        attr_accessor :file        def call          connection = super          begin            input_stream = connection.get_input_stream          rescue Java::java.io.IOException            @logger.error { "An I/O error has occured while attempting to create an input stream" } unless @logger.nil?          rescue Java::java.net.UnknownServiceException            @logger.error { "Protocol does not support input" } unless @logger.nil?          end          begin            output_stream = Java::java.io.FileOutputStream.new @file          rescue Java::java.io.FileNotFoundException            @logger.error { "File not found" } unless @logger.nil?          rescue Java::java.lang.SecurityException            @logger.error { "Security manager's checkWrite attribute denies write access to the file" } unless @logger.nil?          end          buffered_stream = Java::java.io.BufferedOutputStream.new output_stream, BUFFER_SIZE          buffer = Java::byte[BUFFER_SIZE].new          while (bytes_read = input_stream.read buffer) != -1            buffered_stream.write buffer, 0, bytes_read          end          input_stream.close          buffered_stream.close          output_stream.close#          code = connection.response_code#          etag = connection.get_header_field "etag"#          response = HttpResponse.new code, nil, etag#          return response        end      end    end  endend