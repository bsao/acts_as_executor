=acts_as_executor
acts_as_executor seamlessly integrates Java's Executor framework with JRuby on Rails, giving an application the ability to interact with executors in a familiar Rails'eque way.

==Features
* Database persisted, executor and task configurations 
* Create and delete both executors and tasks dynamically at runtime
* Automatic management of completed tasks

==Getting Started
Rails 3 Gemfile
  gem "acts_as_executor"
Install via
  gem install acts_as_executor --pre
  # or
  bundle install

====Generate & Migrate
  rails generate executor <ModelName>

  e.g.
  rails generate executor Executor
      create  config/initializers/acts_as_executor.rb
      create  app/models/executor.rb
      create  app/models/executor_task.rb
      create  db/migrate/20110601230311_create_executors.rb
  rake db:migrate

====Create Executor
  Executor.create(:name => "cached_executor",
                  :kind => ActsAsExecutor::Executor::Kinds::CACHED)
====Create Scheduled Executor
  Executor.create(:name => "scheduled_executor",
                  :kind => ActsAsExecutor::Executor::Kinds::SCHEDULED,
                  :size => 3)
====Create Task
  e = Executor.find_by_name("cached_executor")
  e.tasks.create(:clazz => "HelloWorldTask",
                 :arguments => { :message => "This is my message")
====Create Scheduled Task
  e = Executor.find_by_name("scheduled_executor")
  e.tasks.create(:clazz => "HelloWorldTask",
                 :arguments => { :message => "This is my scheduled message" },
                 :schedule => ActsAsExecutor::Task::Schedules::FIXED_DELAY,
                 :start => 1,
                 :every => 5,
                 :units => ActsAsExecutor::Common::Units::MINUTES)

====Example Task
  class HelloWorldTask
    include Java::java.lang.Runnable
  
    attr_accessor :message

    def run
      p "Hello World. " + message
    end
  end

==Notes
Upon a task completing its execution on a non-scheduled executor, the task will be delete from the database. Due to the possiblity that multiple threads may be attempting to delete records simultaneously, it is recommended NOT to use SQLite as a database provider. In this scenario, database locking may occur causing records to fail deletion and thus exist for tasks that have actually completed thier execution.

==What's New in Release 1.0.0.beta2
* Support for all executor types, scheduled and non-scheduled
* Executors can be created and deleted at runtime
* Tasks can be created and added to executors at runtime
* Automatic management of completed tasks on non-scheduled executors
* Custom logger can now be set via initializer